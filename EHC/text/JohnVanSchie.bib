@PhdThesis{boquist:99,
  author =       "U. Boquist",
  title =        "Code Optimisation Techniques for Lazy Functional
                 Languages",
  school =       "Chalmers University of Technology, Gothenburg,
                 Sweden",
  year =         "1999",
  month =        apr,
}

@PhdThesis{dijkstra:05,
  author =       "A. Dijkstra",
  title =        "Stepping through Haskell",
  school =       "University of Utrecht, The Netherlands",
  year =         "2005",
  month =        nov,
}

@InProceedings{wadler:89,
  author =       "P. Wadler and S. Blott",
  title =        "How to make ad-hoc polymorphism less ad hoc",
  booktitle =    "POPL '89: Proceedings of the 16th ACM SIGPLAN-SIGACT
                 symposium on Principles of programming languages",
  year =         "1989",
  ISBN =         "0-89791-294-2",
  pages =        "60--76",
  location =     "Austin, Texas, United States",
  doi =          "http://doi.acm.org/10.1145/75277.75283",
  publisher =    "ACM Press",
  address =      "New York, NY, USA",
}

@InProceedings{lattner:04,
  author =       "C. Lattner and V. Adve",
  title =        "{LLVM}: {A} Compilation Framework for Lifelong Program
                 Analysis \& Transformation",
  booktitle =    "CGO '04: Proceedings of the international symposium on
                 Code generation and optimization",
  year =         "2004",
  ISBN =         "0-7695-2102-9",
  pages =        "75",
  location =     "Palo Alto, California",
  publisher =    "IEEE Computer Society",
  address =      "Washington, DC, USA",
}

@Misc{jones:97,
  author =       "S. Peyton Jones and E. Meijer",
  title =        "Henk: a typed intermediate language",
  text =         "S. Peyton Jones and E. Meijer. Henk: a typed
                 intermediate language. In Proc. 1997 ACM SIGPLAN
                 Workshop on Types in Compilation, June 1997.",
  year =         "1997",
  URL =          "citeseer.ist.psu.edu/peytonjones97henk.html",
}

@Article{jones:92,
  author =       "S. Peyton Jones",
  title =        "Implementing Lazy Functional Languages on Stock
                 Hardware: The Spineless Tagless {G}-Machine",
  journal =      "Journal of Functional Programming",
  volume =       "2",
  number =       "2",
  pages =        "127--202",
  year =         "1992",
  URL =          "citeseer.ist.psu.edu/peytonjones92implementing.html",
}

@Article{marlow:04,
  author =       "S. Marlow and S. Peyton Jones",
  title =        "Making a fast curry: push/enter vs. eval/apply for
                 higher-order languages",
  journal =      "SIGPLAN Not.",
  volume =       "39",
  number =       "9",
  year =         "2004",
  ISSN =         "0362-1340",
  pages =        "4--15",
  doi =          "http://doi.acm.org/10.1145/1016848.1016856",
  publisher =    "ACM Press",
  address =      "New York, NY, USA",
}

@InProceedings{johnsson:84,
  author =       "T. Johnsson",
  title =        "Efficient compilation of lazy evaluation",
  booktitle =    "SIGPLAN '84: Proceedings of the 1984 SIGPLAN symposium
                 on Compiler construction",
  year =         "1984",
  ISBN =         "0-89791-139-3",
  pages =        "58--69",
  location =     "Montreal, Canada",
  doi =          "http://doi.acm.org/10.1145/502874.502880",
  publisher =    "ACM Press",
  address =      "New York, NY, USA",
}

@Misc{tolmach,
  author =       "A. Tolmach",
  title =        "An External Representation for the {GHC} Core
                 Language",
  URL =          "citeseer.ist.psu.edu/tolmach01external.html",
}

@Misc{fog:07,
  author =       "A. Fog",
  title =        "The microarchitecture of Intel and {AMD} {CPU}'s : An
                 optimization guide for assembly programmers and
                 compiler makers",
  URL =          "http://www.agner.org/optimize/microarchitecture.pdf",
}

@Manual{sse4:07,
  title =        "Intel {SSE4} Programming Reference",
  organization = "Intel Corporation",
  month =        apr,
  year =         "2007",
  note =         "\url{http://softwarecommunity.intel.com/isn/Downloads/Intel
                 SSE4 Programming Reference.pdf}",
}

@Book{jvms:99,
  title =        "The Java({TM}) Virtual Machine Specification Second
                 Edition",
  author =       "T. Lindholm and F. Yellin",
  publisher =    "Prentice Hall PTR",
  year =         "1999",
  month =        apr,
  key =          "978-0201432947",
  note =         "\url{http://java.sun.com/docs/books/jvms/second_edition/html/VMSpecTOC.doc.html}",
}

@InProceedings{jones99,
  author =       "S. Peyton Jones and N. Ramsey and F. Reig",
  title =        "{C}{-}{-}: a Portable Assembly Language that Supports
                 Garbage Collection",
  booktitle =    "International Conference on Principles and Practice of
                 Declarative Programming",
  year =         "1999",
  URL =          "citeseer.ist.psu.edu/239439.html",
}

@TechReport{tullsen:96,
  author =       "M. Tullsen",
  title =        "Compiling Haskell to Java",
  number =       "YALEU/DCS/RR-1204",
  institution =  "Yale University",
  month =        may,
  year =         "1996",
  URL =          "http://www.cs.yale.edu/homes/tullsen/haskell-to-java.ps",
}

@Article{choi:01,
  author =       "K. Choi and H. Lim and T. Han",
  title =        "Compiling Lazy Functional Programs Based on the
                 Spineless Tagless {$G$}-Machine for the {Java} Virtual
                 Machine",
  journal =      "Lecture Notes in Computer Science",
  volume =       "2024",
  page =         "78",
  year =         "2001",
  URL =          "citeseer.ist.psu.edu/choi01compiling.html",
}

@misc{stewart:02,
  author =       "D. Stewart",
  title =        "Multi-paradigm Just-In-Time Compilation",
  note =         "Bachelors Honours thesis. The University of New South Wales",
  school =       "The University of New South Wales",
  year =         "2002",
  month =        nov,
}

@Unpublished{meijer:01,
  author =       "N. Perry and E. Meijer",
  title =        "Implementing Functional Languages on Object-Oriented
                 Virtual Machines",
  year =         "2001",
  URL =          "http://www.research.microsoft.com/~emeijer/Papers/ImplementingFL.pdf",
  note =         "Available at: \url{http://www.research.microsoft.com/~emeijer/Papers/ImplementingFL.pdf}",
}

@InProceedings{mitchell:07,
  author =       "N. Mitchell and C. Runciman",
  title =        "Supero: Making Haskell Faster",
  month =        oct,
  year =         "2007",
  booktitle =    "Proc. IFL 2007",
  pdf =          "http://www-users.cs.york.ac.uk/\~{}ndm/downloads/paper-supero_making_haskell_faster-27_sep_2007.pdf",
  abstract =     "Haskell is a functional language, with features such
                 as higher order functions and lazy evaluation, which
                 allow succinct programs. These high-level features are
                 difficult for fast execution, but GHC is a ma- ture and
                 widely used optimising compiler. This paper presents a
                 whole- program approach to optimisation, which produces
                 speed improvements of between 10\% and 60\% when used
                 with GHC, on eight benchmarks.",
}

@InProceedings{jones:94,
  author =       "M.P. Jones",
  title =        "Dictionary-Free Overloading by Partial Evaluation",
  booktitle =    "Partial Evaluation and Seman\-tics-Based Program
                 Manipulation, Orlando, Florida, June 1994 (Technical
                 Report 94/9, Department of Computer Science, University
                 of Melbourne)",
  pages =        "107--117",
  year =         "1994",
  URL =          "citeseer.ist.psu.edu/jones94dictionaryfree.html",
}

@Article{monteiro:05,
  author =      {M. Monteiro and M. Ara\'ujo and R. Borges and A.
                 Santos},
  title =        "Compiling Non­strict Functional Languages for the
                 .{NET} Platform",
  abstract =     "In this work, we propose a compilation strategy for
                 non­strict functional languages targeting the
                 Microsoft .NET Platform, a multilanguage platform which
                 provides a large number of services to aid current
                 software development. This strategy is based on the
                 push/enter execution model, enables fast function
                 calling mechanisms whenever possible and males use of
                 new features present in .NET Framework, such as
                 delegates and tail calls. Our case study was the
                 compilation of the Haskell language, a standardized and
                 well known non­strict functional language. Our main
                 contribution is the construction of an environment for
                 the testing of different compilation techniques for
                 functional languages targeting .NET.",
  journal =      "Journal of Universal Computer Science",
  year =         "2005",
  volume =       "11",
  number =       "7",
  pages =        "1255--1274",
  note =         "\url{http://www.jucs.org/jucs_11_7/compiling_non_strict_functional}",
}

@techreport{cil:06,
  title = {{Standard ECMA-335 -- Common Language Infrastructure (CLI)}},
  author = {{ECMA International}},
  institution = {{ECMA International}},
  number = "4th edition",
  month = "June",
  year = "2006",
  note = "Available at: \\\url{http://www.ecma-international. org/publications/standards/ecma-335.htm}",
}

@techreport{amd64:07,
  title  = {{System V Application Binary Interface -- AMD64 Architecture Processor Supplement}},
  month  = "December",
  year   = "2007",
  note   = "Available at: \url{http://www.x86-64.org/documentation.html}",
  author = {M. Matz and J. Hubi\v{c}ka and A. Jaeger and M. Mitchell}, 
}

@misc{dotgnu:07,
  key   = "{DotGNU}",
  title = "{The DotGNU Project}",
  note = "Available at: \url{http://www.dotgnu.org}",
}

@misc{mono:07,
  key   = "{Mono}",
  title = "{The Mono Project}",
  note = "Available at: \url{http://www.mono-project.com/}",
}

@misc{rotor:07,
  key   = "{Rotor}",
  title = "{Rotor : Shared Source Common Language Infrastructure 1.0 Release}",
  note = "Available at: \url{http://www.microsoft.com/downloads/details.aspx?FamilyId=3A1C93FA-7462-47D0-8E56-8DD34C6292F0&displaylang=en}",
}

@misc{msnet:07,
  key   = "{Microsoft .NET Framework}", 
  title = "{Microsoft .NET Framework}",
  note = "Available at: \url{http://msdn2.microsoft.com/en-us/netframework/default.aspx}",
}
  
@article{merrill:03,
  title={{GENERIC and GIMPLE: A New Tree Representation for Entire Functions}},
  author={J. Merrill},
  journal={{Proceedings of the 2003 GCC Summit}},
  pages={171--180},
  year={2003}
}
  
@inproceedings{jones:91,
 author = {S. Peyton Jones and J. Launchbury},
 title = {Unboxed Values as First Class Citizens in a Non-Strict Functional Language},
 booktitle = {Proceedings of the 5th ACM Conference on Functional Programming Languages and Computer Architecture},
 year = {1991},
 isbn = {3-540-54396-1},
 pages = {636--666},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }  
 
@article{johnsson:90,
  title={{Analysing Heap Contents in a Graph Reduction Intermediate Language}},
  author={T. Johnsson},
  journal={Proceedings of the Glasgow Functional Programming Workshop, Ullapool},
  pages={146--171},
  year={1990}
}

@inproceedings{partain:93,
 author = {W. Partain},
 title = {The nofib Benchmark Suite of Haskell Programs},
 booktitle = {Proceedings of the 1992 Glasgow Workshop on Functional Programming},
 year = {1993},
 isbn = {3-540-19820-2},
 pages = {195--202},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }
 
@article{jones:02,
 author = {S. Peyton Jones and S. Marlow},
 title = {Secrets of the Glasgow Haskell Compiler inliner},
 journal = {J. Funct. Program.},
 volume = {12},
 number = {5},
 year = {2002},
 issn = {0956-7968},
 pages = {393--434},
 doi = {http://dx.doi.org/10.1017/S0956796802004331},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
 }
 
@inproceedings{marlow:07,
 author = {S. Marlow and A. Rodriguez Yakushev and S. Peyton Jones},
 title = {Faster laziness using dynamic pointer tagging},
 booktitle = {ICFP '07: Proceedings of the 2007 ACM SIGPLAN international conference on Functional programming},
 year = {2007},
 isbn = {978-1-59593-815-2},
 pages = {277--288},
 location = {Freiburg, Germany},
 doi = {http://doi.acm.org/10.1145/1291151.1291194},
 publisher = {ACM},
 address = {New York, NY, USA},
 } 
 
@phdthesis{nethercote:04,
  author =	 {N. Nethercote},
  title = 	 {{Dynamic binary analysis and instrumentation}},
  year = 	 2004,
  month = 	 nov,
  url = 	 {http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-606.pdf},
  institution =  {University of Cambridge, Computer Laboratory},
  issn = 	 {1476-2986},
  number = 	 {UCAM-CL-TR-606}
}

@inproceedings{nethercote:07,
  author    = {N. Nethercote and J. Seward}, 
  title     = {Valgrind: A Framework for Heavyweight Dynamic Binary Instrumentation},
  booktitle = {PLDI '07: Proceedings of the 2007 ACM SIGPLAN Conference on Programming Language Design and Implementation}, 
  year      = {2007},
  month     = {June},
  address   = {San Diego, California, USA},
}

@inproceedings{cheadle:00,
 author = {A. M. Cheadle and A. J. Field and S. Marlow and S. Peyton Jones and R. L. While},
 title = {Non-stop Haskell},
 booktitle = {ICFP '00: Proceedings of the fifth ACM SIGPLAN international conference on Functional programming},
 year = {2000},
 isbn = {1-58113-202-6},
 pages = {257--267},
 doi = {http://doi.acm.org/10.1145/351240.351265},
 publisher = {ACM},
 address = {New York, NY, USA},
 }
 
@inproceedings{cheadle:04,
 author = {A. M. Cheadle and A. J. Field and S. Marlow and S. Peyton Jones and R. L. While},
 title = {Exploring the barrier to entry: incremental generational garbage collection for Haskell},
 booktitle = {ISMM '04: Proceedings of the 4th international symposium on Memory management},
 year = {2004},
 isbn = {1-58113-945-4},
 pages = {163--174},
 location = {Vancouver, BC, Canada},
 doi = {http://doi.acm.org/10.1145/1029873.1029893},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{guyer:06,
 author = {S. Z. Guyer and K. S. McKinley and D. Frampton},
 title = {Free-Me: a static analysis for automatic individual object reclamation},
 booktitle = {PLDI '06: Proceedings of the 2006 ACM SIGPLAN conference on Programming language design and implementation},
 year = {2006},
 isbn = {1-59593-320-4},
 pages = {364--375},
 location = {Ottawa, Ontario, Canada},
 doi = {http://doi.acm.org/10.1145/1133981.1134024},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@misc{baars:04, 
  eprint = {papers/baars04ag-www.pdf}, 
  title = {{Attribute Grammar System}}, 
  author = {A. Baars}, 
  year = {2004}, 
  note = "Available at: \url{http://www.cs.uu.nl/groups/ST/Center/AttributeGrammarSystem}", 
}

@inproceedings{jones:93,
    author = {S. Peyton Jones and C.V. Hall and W.D. Partain and P.L Wadler},
    title = {The Glasgow Haskell compiler: a technical overview},
    booktitle = {Proceedings of Joint Framework for Information Technology Technical Conference},
    month = {March},
    year = {1993},
    pages = {249--257},
    location ={Keele},
    url = {http://research.microsoft.com/~simonpj/Papers/papers.html},
}

@inproceedings{fokker:07,
	author = {A. Dijkstra and J Fokker and S. Doaitse Swierstra},
	title = {The Structure of the Essential Haskell Compiler, or Coping with Compiler Complexity},
    booktitle = {IFL '07: Proceedings of the 19th International Symposium on Implementation and Application of Functional Languages},
    year = {2007},
    pages = {107--122},
}

@InProceedings{latadv:03,
    Author    = {C. Lattner and V. Adve},
    Title     = "{Architecture for a Next-Generation GCC}",
    Booktitle = "{Proc. First Annual GCC Developers' Summit}",
    Address   = {Ottawa, Canada},
    Month     = {May},
    Year      = {2003},
    URL       = {http://llvm.cs.uiuc.edu/pubs/2003-05-01-GCCSummit2003.html}
  }

@manual{make:06,
  title        = "{GNU Make Manual}",
  organization = {Free Software Foundation}, 
  edition      = {0.70}, 
  month        = {April}, 
  year         = {2006},
  note         = {Available at: \url{http://www.gnu.org/software/make/}}
}

@manual{gcc:08,
  title        = "{GNU GCC Manual}",
  organization = {Free Software Foundation}, 
  edition      = {4.3.2}, 
  month        = {August}, 
  year         = {2008},
  note         = {Available at: \url{http://gcc.gnu.org/}}
}

@manual{glibc:07,
  title        = "{The GNU C Library Manual}",
  organization = {Free Software Foundation}, 
  month        = {August}, 
  year         = {2007},
}

@inproceedings{sansom:95,
  author    = {P. M. Sansom and S.. Peyton Jones},
  title     = {Time and space profiling for non-strict, higher-order functional languages},
  booktitle = {22'nd ACM Symposium on Principles of Programming Languages},
  year      = {1995},
  pages     = {355--366},
  publisher = {ACM Press}
}

@unpublished{marlow:98,
  author = {S. Marlow and S. Peyton Jones},
  title  = {The New GHC/Hugs Runtime System},
  year   = {1998}
}

@article{standard1999,
  title={{ISO/IEC 9899: 1999, International Standard Programming Languages C}},
  author={{I}nternational Standards Organization},
  journal={International Standards Organization},
  year={1999}
}

@misc{gloger,
  title={Dynamic memory allocator implementations in Linux system libraries},
  author={W. Gloger},
  note={\url{http://www.dent.med.uni-muenchen.de/~wmglo/malloc-slides.html}}
}

@misc{lea:96,
  title={A Memory Allocator},
  author={D. Lea},
  year={1996},
  month={December},
  note={\url{http://g.oswego.edu/dl/html/malloc.html}},
}  
