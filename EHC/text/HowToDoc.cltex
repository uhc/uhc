%%[main doclatex
\section{Introduction}
%%@HowToDoc.introduction

\section{Steps}
\subsection{Allocate a variant number}
%%@HowToDoc.allocateVariant

\subsection{Adapt toplevel documentation}
%%@HowToDoc.mainDriver

\subsection{Create content}
%%@HowToDoc.content

\subsection{Generate documentation from content}
%%@HowToDoc.generate

\subsection{Install documentation}
%%@HowToDoc.install

\section{Further reading}
%%@HowToDoc.andFurther
%%]

%%[introduction doclatex
This document describes how to create a new documentation document, in particular the steps required for adapting makefiles and where to put newly added text.
Documentation differs from normal text used to produce (e.g.) papers in that output can be produced for various output formats.
This gives a wider range of ways of reading, but comes at the price of a restrictive language for writing documentation.

The overall infrastructure for documentation is organized as follows:
\begin{itemize}
\item Documentation sources are kept in the \sref{text}{text source directory}.
\item Each documentation document has a name and a variant number, the name is used to identify the relevant related files, the variant number is only used internally.
\item For each documentation with name \verb|N| a \sref{build/N}{build directory} is used holding the intermediate files for generating \sref{doc/N.xxx}{documentation files}.
The suffix \verb|xxx| currently can be \verb|pdf| or \verb|twiki|.
\item The documentation files in \sref{doc}{the documentation directory} are then published or used otherwise.
\end{itemize}

%%]

%%[allocateVariant doclatex
First a variant number must be allocated. All papers and documentation are constructed by \eref{Shuffle}{Shuffle} from a set of files holding \eref{Shuffle}{Shuffle}
chunks.
Of the various makefiles for producing text the \sref{text/files-variants.mk}{makefile for text sources and variants} must include a definition for a new variant.
A new variant is added by:

\begin{enumerate}
\item Finding an unused number, say 88, in the comment above variable \verb|TEXT_SHUFFLE_ORDER|, updating the comment with info about variant 88.
\item Adding an order dependency on variant 39 (the base for documentation) in variable \verb|TEXT_SHUFFLE_ORDER|:
\begin{verbatim}
TEXT_SHUFFLE_ORDER  += \
        ... \
        39 < 88, \
        ...
\end{verbatim}
\end{enumerate}

The new documentation must be given a name which can be used for making and publishing the documentation:
\begin{enumerate}
\item Find an unused name, say \emph{my-doc}, and add it to the list in variable \verb|TEXT_DOC_VARIANTS|.
\item Connect the name to the variant number by including a makefile target in the \sref{text/files-targets.mk}{makefile for targets}.
The target name must be of the form \verb|text-variant-<chosen-name>|:
\begin{verbatim}
text-variant-my-doc:
	$(MAKE) \
	  TEXT_SHUFFLE_VARIANT=88 \
	  text-variant-dflt-doc
\end{verbatim}
\end{enumerate}

Additional parameters can be passed to the recursive call to make, for example:
\begin{itemize}
\item \verb|TEXT_CFG_SHUFFLE_INCLUDES_CHUNK_SRC| (default: empty), for specifying that all sources of EHC must be used by shuffle for extracting chunks. For example, the technical documentation has
the following makefile definition:
\begin{verbatim}
text-variant-ehc-technical-doc:
	$(MAKE) TEXT_CFG_SHUFFLE_INCLUDES_CHUNK_SRC=yes \
	  TEXT_SHUFFLE_VARIANT=42 \
	  text-variant-dflt-doc
\end{verbatim}
\item \verb|TEXT_CFG_FIGS_INCLUDES_DOT_SRC| (default: \verb|yes|), for specifying that figures generated by \href{http://www.graphviz.org/}{dot} should be available for use.
\item \verb|TEXT_CFG_FIGS_INCLUDES_XFIG_SRC| (default: \verb|yes|), for specifying that figures drawn with \href{http://www.xfig.org/}{xfig} should be available for use.
\end{itemize}


%%]

%%[mainDriver doclatex
All documentation and papers share a common \sref{text/main.cltex}{toplevel text file}. Each documentation uses its variant number to identify its relevant text chunks.
Chunks common to all documentation is factored out into variant 39, all others inherit from it via \eref{Shuffle}{Shuffle}'s inheritance mechanism.
For our \emph{my-doc} with variant number 88 we need to add:

\begin{enumerate}
\item Title + author. Search in the \sref{text/main.cltex}{toplevel text file} for the combination of (e.g.) \verb|%%[41| (start of a chunk with variant nr 41, used for this documentation) and \verb|title|,
copy the text and change the variant number to 88 as to obtain something like:
\begin{verbatim}
%%%[88 doclatex
\title{My stuff}
\author{Me}
%%%]
\end{verbatim}
\item Content. Again search for \verb|%%[41| and copy it:
\begin{verbatim}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% My doc
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%[88 doclatex
some content here ...
%%%]
\end{verbatim}
\end{enumerate}
%%]

%%[content doclatex
Content is added according to the type of a chunk, as defined by \eref{Text2Text}{Text2Text}. At least type \verb|doclatex| is supported, a subset of \href{http://www.latex-project.org/}{LaTeX} for documentation purposes.
See \eref{Text2Text}{Text2Text} for more information.
We have used and will use chunk/text type \verb|doclatex| for the examples in this document.

By convention the real content is placed in a \sref{text/ToolDocMy.cltex}{text source for My documentation} to which then is referred by name from the \sref{text/main.cltex}{toplevel text file}.
The name of the \verb|My| \sref{text/ToolDocMy.cltex}{source file} assumes the documentation is about a tool, hence the prefix \verb|ToolDoc|.
General topics use prefix \verb|Topic|, slides use \verb|Slides|. This convention is not enforced, so choose a sensible prefix.

The following must be done:
\begin{enumerate}
\item Create (and add it to the repository, if necessary) \sref{text/ToolDocMy.cltex}{the documentation source file} and add its base name \verb|ToolDocMy| to the makefile variable
\verb|TEXT_SUBS| in \sref{text/files-variants.mk}{the makefile for text sources and variants}.
It will now be automatically used when \eref{Shuffle}{Shuffle} is invoked.
\item Add content in \sref{text/ToolDocMy.cltex}{the documentation source file}, for example by:
\begin{verbatim}
%%%[intro doclatex
My is ...
%%%]

%%%[content doclatex
...
%%%]
\end{verbatim}
The file defines named chunks \verb|intro| and \verb|content| of type \verb|doclatex|.
These are included in \sref{text/main.cltex}{the toplevel text file} by referring to their names:
\begin{verbatim}
%%%[88 doclatex
\section{Introduction}
%%%@ToolDocMy.intro

\section{My}
%%%@ToolDocMy.content
%%%]
\end{verbatim}
A reference to a chunk consists of the chosen base name \verb|ToolDocMy| and the chunk name local to the corresponding text file, separated by a dot.
Section headers can be placed anywhere, but for reuse of content it is advisable to keep hierarchical structure separated from the actual text.
\end{enumerate}
%%]

%%[generate doclatex
A pdf file for the documentation is made by:
\begin{verbatim}
make doc/my-doc.pdf
\end{verbatim}
It respectively runs the defined chunks through \eref{Shuffle}{Shuffle}, \eref{Shuffle}{Shuffle} and twice through pdflatex.
%%]

%%[install doclatex
Installation is optional.
Documentation is usually installed in the \eref{Documentation}{EHC documentation twiki}. The installable files for all documentation are created in \sref{www}{a local www directory} by
\begin{verbatim}
make www
\end{verbatim}
They are placed on the twiki by
\begin{verbatim}
make www-sync
\end{verbatim}
This requires proper permissions.
%%]

%%[andFurther doclatex
See also
\begin{itemize}
\item \eref{Shuffle}{Shuffle} for manipulating source chunks.
\item \eref{Text2Text}{Text2Text} for documentation formatting.
\end{itemize}

%%]

%%[XX doclatex

%%]
