%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Haskell importable interface to forceEval on Ty
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(99 hmtyinfer || hmtyast) hs module {%{EH}Ty.Trf.ForceEval} import({%{EH}Base.Common},{%{EH}Ty},{%{EH}Base.ForceEval})
%%]

%%[(99 hmtyinfer || hmtyast).WRAPPER ag import({Ty/AbsSyn})
WRAPPER Ty Label Pred

%%]
PRAGMA strictcase

%%[(99 hmtyinfer || hmtyast) hs
instance ForceEval Ty where
  forceEval x | repl_Syn_Ty t `seq` True = x
              where t = wrap_Ty (sem_Ty x) (Inh_Ty)
%%[[102
  fevCount x = cm_Syn_Ty t
              where t = wrap_Ty (sem_Ty x) (Inh_Ty)
%%]]

instance ForceEval Pred where
  forceEval x | repl_Syn_Pred t `seq` True = x
              where t = wrap_Pred (sem_Pred x) (Inh_Pred)
%%[[102
  fevCount x = cm_Syn_Pred t
              where t = wrap_Pred (sem_Pred x) (Inh_Pred)
%%]]

instance ForceEval Label where
  forceEval x | repl_Syn_Label t `seq` True = x
              where t = wrap_Label (sem_Label x) (Inh_Label)
%%[[102
  fevCount x = cm_Syn_Label t
              where t = wrap_Label (sem_Label x) (Inh_Label)
%%]]

instance ForceEval PredScope  where
  forceEval x@(PredScope_Lev l) | forceEval l `seq` True = x
  forceEval x@(PredScope_Var v) | forceEval v `seq` True = x
%%[[102
  fevCount (PredScope_Lev l) = cm1 "PredScope_Lev" `cmUnion` fevCount l
  fevCount (PredScope_Var v) = cm1 "PredScope_Var" `cmUnion` fevCount v
%%]]

instance ForceEval CHRPredOccCxt  where
  forceEval x@(CHRPredOccCxt_Scope1 sc) | forceEval sc `seq` True = x
%%[[102
  fevCount (CHRPredOccCxt_Scope1 sc) = cm1 "CHRPredOccCxt_Scope1" `cmUnion` fevCount sc
%%]]

instance ForceEval LabelOffset where
  forceEval x@(LabelOffset_Off o) | forceEval o `seq` True = x
  forceEval x@(LabelOffset_Var v) | forceEval v `seq` True = x
%%[[102
  fevCount (LabelOffset_Off x) = cm1 "LabelOffset_Off" `cmUnion` fevCount x
  fevCount (LabelOffset_Var v) = cm1 "LabelOffset_Var" `cmUnion` fevCount v
%%]]

instance ForceEval CHRPredOcc where
  forceEval x@(CHRPredOcc y z r) | forceEval y `seq` forceEval z `seq` forceEval r `seq` True = x
%%[[102
  fevCount (CHRPredOcc y z r) = cm1 "CHRPredOcc" `cmUnion` fevCount y `cmUnion` fevCount z `cmUnion` fevCount r
%%]]

instance ForceEval PredOccId where
  forceEval x@(PredOccId i) | forceEval i `seq` True = x
%%[[102
  fevCount (PredOccId i) = cm1 "PredOccId" `cmUnion` fevCount i
%%]]

instance ForceEval ImplsProveOcc where
  forceEval x@(ImplsProveOcc i s) | forceEval i `seq` forceEval s `seq` True = x
%%[[102
  fevCount (ImplsProveOcc i s) = cm1 "ImplsProveOcc" `cmUnion` fevCount i `cmUnion` fevCount s
%%]]

%%]

%%[(102 hmtyinfer || hmtyast) hs
instance ForceEval TyQu where
  fevCount x | x `seq` True = cm1 "TyQu_*"
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% ForceEval over structure
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[(99 hmtyinfer || hmtyast)
ATTR AllTyAndFlds  [ | | repl USE {`seq`} {()}: {()}  ]

SEM Ty
  | Con				lhs		.	repl		=	forceEval' @nm
  | Var				lhs		.	repl		=	forceEval @tv `seq` @categ.repl
  | Quant			lhs		.	repl		=	forceEval @tv `seq` @qu.repl `seq` @ty.repl
  | Lam				lhs		.	repl		=	forceEval @tv `seq` @ty.repl
  | Ext				lhs		.	repl		=	forceEval @nm `seq` @extTy.repl `seq` @ty.repl
  | Pred			lhs		.	repl		=	forceEval' @pr.repl						-- not necessary... ??
  | Impls			lhs		.	repl		=	forceEval' @impls.repl					-- not necessary... ??

SEM Pred
  | Var				lhs		.	repl		=	forceEval' @pv
  | Pred			lhs		.	repl		=	@ty.repl
  | Class			lhs		.	repl		=	@ty.repl
  | Preds			lhs		.	repl		=	@seq.repl
  | Lacks			lhs		.	repl		=	@ty.repl `seq` @lab.repl
  | Arrow			lhs		.	repl		=	@args.repl `seq` @res.repl

SEM Impls
  | Tail			lhs		.	repl		=	forceEval @iv `seq` forceEval' @proveOccs
  | Cons			lhs		.	repl		=	forceEval @iv `seq` forceEval @pv `seq` forceEval @proveOccs `seq` @pr.repl `seq` @tl.repl

SEM Label
  | Lab				lhs		.	repl		=	forceEval' @nm
  | Var				lhs		.	repl		=	forceEval' @lv

SEM PredSeq
  | Var				lhs		.	repl		=	forceEval' @av

%%]
SEM RowExts
  | Var				lhs		.	repl		=	forceEval' @ev
  | Exts			lhs		.	repl		=	forceEval' @exts


%%[(102 hmtyinfer || hmtyast)
ATTR AllTyAndFlds  [ | | cm USE {`cmUnion`} {(emptyCM)}: CountMp ]

SEM Ty
  | Con             lhs     .   cm          =   cm1 "Ty_Con"    `cmUnion` fevCount @nm
  | Var             lhs     .   cm          =   cm1 "Ty_Var"    `cmUnion` fevCount @tv `cmUnion` @categ.cm
  | Quant           lhs     .   cm          =   cm1 "Ty_Quant"  `cmUnion` fevCount @tv `cmUnion` @qu.cm `cmUnion` @ty.cm
  | Lam             lhs     .   cm          =   cm1 "Ty_Lam"    `cmUnion` fevCount @tv `cmUnion` @ty.cm
  | Ext             lhs     .   cm          =   cm1 "Ty_Ext"    `cmUnion` fevCount @nm `cmUnion` @extTy.cm `cmUnion` @ty.cm
  | Pred            lhs     .   cm          =   cm1 "Ty_Pred"   `cmUnion` fevCount @pr.cm       
  | Impls           lhs     .   cm          =   cm1 "Ty_Impls"  `cmUnion` fevCount @impls.cm    
  | Any             lhs     .   cm          =   cm1 "Ty_Any"

SEM TyQu
  | *               lhs     .   cm          =   cm1 "TyQu_*"

SEM TyVarCateg
  | *               lhs     .   cm          =   cm1 "TyVarCateg_*"

SEM Pred
  | Var             lhs     .   cm          =   cm1 "Pred_Var"      `cmUnion` fevCount @pv
  | Pred            lhs     .   cm          =   cm1 "Pred_Pred"     `cmUnion` @ty.cm   
  | Class           lhs     .   cm          =   cm1 "Pred_Class"    `cmUnion` @ty.cm   
  | Preds           lhs     .   cm          =   cm1 "Pred_Preds"    `cmUnion` @seq.cm
  | Lacks           lhs     .   cm          =   cm1 "Pred_Lacks"    `cmUnion` @ty.cm `cmUnion` @lab.cm
  | Arrow           lhs     .   cm          =   cm1 "Pred_Arrow"    `cmUnion` @args.cm `cmUnion` @res.cm

SEM Impls
  | Tail            lhs     .   cm          =   cm1 "Impls_Tail" `cmUnion` fevCount @iv `cmUnion` fevCount @proveOccs
  | Cons            lhs     .   cm          =   cm1 "Impls_Cons" `cmUnion` fevCount @iv `cmUnion` fevCount @pv `cmUnion` fevCount @proveOccs `cmUnion` @pr.cm `cmUnion` @tl.cm
  | Nil             lhs     .   cm          =   cm1 "Impls_Nil"

SEM Label
  | Lab             lhs     .   cm          =   cm1 "Label_Lab" `cmUnion` fevCount @nm
  | Var             lhs     .   cm          =   cm1 "Label_Var" `cmUnion` fevCount @lv

SEM PredSeq
  | Var             lhs     .   cm          =   cm1 "PredSeq_Var"   `cmUnion` fevCount @av
  | Cons            lhs     .   cm          =   cm1 "PredSeq_Cons"  `cmUnion` @hd.cm `cmUnion` @tl.cm
  | Nil             lhs     .   cm          =   cm1 "PredSeq_Nil"

%%]
SEM RowExts
  | Var             lhs     .   cm          =   cm1 "RowExts_Var"   `cmUnion` fevCount @ev
  | Exts            lhs     .   cm          =   cm1 "RowExts_Exts"  `cmUnion` fevCount @exts


