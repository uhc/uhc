-------------------------------------------------------------------------
-- Expr marked/named fragments
-------------------------------------------------------------------------

%%[1 hs module (ExprReGamExprFmGam)
%%]

%%[1 hs export (exprNmGam)
%%]

%%[1 hs import (qualified Data.Map as Map, Common, Expr, FmGam)
%%]

%%[1 ag import ({Expr/AbsSynAG}, {Expr/SelfAG})
%%]

%%[1 ag
WRAPPER AGExprItf
%%]

%%[1 hs
exprNmGam :: Expr -> FmGam Expr
exprNmGam e
  = reGamExprFmGam_Syn_AGExprItf r2
  where r1 = sem_AGExprItf (AGExprItf_AGItf e)
        r2 = wrap_AGExprItf r1
                (Inh_AGExprItf)
%%]

-------------------------------------------------------------------------
-- Internal marked/named fragments
-------------------------------------------------------------------------

%%[1 ag
ATTR AllExpr AGExprItf [ | | reGamExprFmGam USE {`fmGamUnion`} {emptyGam}: {FmGam Expr} ]

SEM Expr
  | Named           lhs     .   reGamExprFmGam
                                            =   fmSingleton @nm FmAll @expr.self `fmGamUnion` @expr.reGamExprFmGam
%%]
