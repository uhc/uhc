%%[(8 jazy)package uu.jazy.core ;/** * Lazy and Functional. * Package for laziness and functions as known from functional languages. * Written by Atze Dijkstra, atze@cs.uu.nl * * $Header:     $ * $Archive:    $ * $NoKeywords: $ *///import java.util.* ;//import java.io.* ;//import uu.jazy.prelude.* ;/** * Something which can be evaluated and/or applied to parameters. */public abstract class Evaluator{%%[[8    protected int nrEvaluations        = 0 ;        protected boolean   doTrace           = false ;    protected int    doTraceCount      = 1 ;        protected void setDoTrace( boolean t )    {    	doTrace = t ;    }        public void resetNrEvaluations()    {    	nrEvaluations = 0 ;    }        public int getNrEvaluations()    {    	return nrEvaluations ;    }%%][100%%]]        /**     * Evaluate an Object known to be an Apply.     */    //public abstract Object eval( Apply av ) ;    /**     * Evaluate an Object.     * The Object itself is returned if it is not an Apply.     */    public abstract Object eval( Object v ) ;}%%]